

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  margin: 0;
  padding: 0;
  background: linear-gradient($soft-violet, $soft-blue);
  color: $dark-grayish-blue;
  font-family: "Kumbh Sans", sans-serif;
  font-size: 12px;
  line-height: 18px;
  font-weight: 400;

  /*min-height and grid place-items center in a body to put attribution right under the component.
  but generally I think it's better to put height and grid on container */

  /*min-height so linear-gradient would not clipp at the bottom */
  min-height: 100vh;
  display: grid;
  place-items: center;
}

h1 {
  color: $very-dark-desaturated-blue;
  font-size: 32px;
  line-height: 32px;
}

button {
  color: $very-dark-grayish-blue;
  font-size: 14px;
  line-height: 14px;
}

/* https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
/* Remove the focus indicator on mouse-focus for browsers that do support :focus-visible */
button:focus:not(:focus-visible) {
  outline: 0;
}

button:focus-visible {
  /* Draw a very noticeable focus style for
     keyboard-focus on browsers that do support
     :focus-visible */
  outline: 2px dashed $soft-red;
  outline-offset: 0px;
}

#root {
  width: 100%;
}

.container {
  max-width: 1440px;
  width: 100%;
}

.font-weight-bold {
  font-weight: 700;
}

@import "component";
@import "illustration";
@import "faq";
@import "attribution";
@import "animation";
@import "responsive";


$line-color: rgba(34, 36, 38, 0.35);

.accordion {
  width: 100%;
  padding: 1rem 2rem;
  display: flex;
  flex-direction: column;
  border-radius: 10%;
  overflow-y: auto;
}

.fold {
  .fold_trigger {
    &:before {
      font-family: FontAwesome;
      content: "\f107";
      display: block;
      float: left;
      padding-right: 1rem;
      transition: transform 400ms;
      transform-origin: 20%;
      color: $line-color;
    }

    text-align: start;
    width: 100%;
    padding: 1rem;
    border: none;
    outline: none;
    background: none;
    cursor: pointer;
    border-bottom: 1px solid $line-color;

    &.open {
      &:before {
        transform: rotateZ(-180deg);
      }
    }
  }

  .fold_content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 400ms ease;

    &.open {
      max-height: 400px;
    }
  }
  border-bottom: 1px solid $line-color;
}


